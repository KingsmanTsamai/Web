//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donation", Namespace="http://schemas.datacontract.org/2004/07/ST2_Service")]
    [System.SerializableAttribute()]
    public partial class Donation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DonationAmoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DonerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DonerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedCauseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DonationAmout {
            get {
                return this.DonationAmoutField;
            }
            set {
                if ((this.DonationAmoutField.Equals(value) != true)) {
                    this.DonationAmoutField = value;
                    this.RaisePropertyChanged("DonationAmout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DonerEmail {
            get {
                return this.DonerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.DonerEmailField, value) != true)) {
                    this.DonerEmailField = value;
                    this.RaisePropertyChanged("DonerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DonerName {
            get {
                return this.DonerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DonerNameField, value) != true)) {
                    this.DonerNameField = value;
                    this.RaisePropertyChanged("DonerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedCauseId {
            get {
                return this.SelectedCauseIdField;
            }
            set {
                if ((this.SelectedCauseIdField.Equals(value) != true)) {
                    this.SelectedCauseIdField = value;
                    this.RaisePropertyChanged("SelectedCauseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cause", Namespace="http://schemas.datacontract.org/2004/07/ST2_Service")]
    [System.SerializableAttribute()]
    public partial class Cause : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CauseRequiredMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CuaseDonationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CauseDescription {
            get {
                return this.CauseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseDescriptionField, value) != true)) {
                    this.CauseDescriptionField = value;
                    this.RaisePropertyChanged("CauseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CauseImg {
            get {
                return this.CauseImgField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseImgField, value) != true)) {
                    this.CauseImgField = value;
                    this.RaisePropertyChanged("CauseImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CauseName {
            get {
                return this.CauseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseNameField, value) != true)) {
                    this.CauseNameField = value;
                    this.RaisePropertyChanged("CauseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CauseRequiredMoney {
            get {
                return this.CauseRequiredMoneyField;
            }
            set {
                if ((this.CauseRequiredMoneyField.Equals(value) != true)) {
                    this.CauseRequiredMoneyField = value;
                    this.RaisePropertyChanged("CauseRequiredMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CuaseDonations {
            get {
                return this.CuaseDonationsField;
            }
            set {
                if ((this.CuaseDonationsField.Equals(value) != true)) {
                    this.CuaseDonationsField = value;
                    this.RaisePropertyChanged("CuaseDonations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/incrementDonation", ReplyAction="http://tempuri.org/IService1/incrementDonationResponse")]
        bool incrementDonation(decimal funds, int ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/incrementDonation", ReplyAction="http://tempuri.org/IService1/incrementDonationResponse")]
        System.Threading.Tasks.Task<bool> incrementDonationAsync(decimal funds, int ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonation", ReplyAction="http://tempuri.org/IService1/addDonationResponse")]
        bool addDonation(Web.ServiceReference1.Donation newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDonation", ReplyAction="http://tempuri.org/IService1/addDonationResponse")]
        System.Threading.Tasks.Task<bool> addDonationAsync(Web.ServiceReference1.Donation newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfdonated", ReplyAction="http://tempuri.org/IService1/checkIfdonatedResponse")]
        Web.ServiceReference1.Donation checkIfdonated(string email, string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfdonated", ReplyAction="http://tempuri.org/IService1/checkIfdonatedResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.Donation> checkIfdonatedAsync(string email, string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCauses", ReplyAction="http://tempuri.org/IService1/getCausesResponse")]
        Web.ServiceReference1.Cause[] getCauses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCauses", ReplyAction="http://tempuri.org/IService1/getCausesResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.Cause[]> getCausesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTotalDonation", ReplyAction="http://tempuri.org/IService1/getTotalDonationResponse")]
        decimal getTotalDonation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTotalDonation", ReplyAction="http://tempuri.org/IService1/getTotalDonationResponse")]
        System.Threading.Tasks.Task<decimal> getTotalDonationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerVolunteer", ReplyAction="http://tempuri.org/IService1/registerVolunteerResponse")]
        bool registerVolunteer(string name, string surname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerVolunteer", ReplyAction="http://tempuri.org/IService1/registerVolunteerResponse")]
        System.Threading.Tasks.Task<bool> registerVolunteerAsync(string name, string surname, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfVolonteerExist", ReplyAction="http://tempuri.org/IService1/checkIfVolonteerExistResponse")]
        bool checkIfVolonteerExist(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfVolonteerExist", ReplyAction="http://tempuri.org/IService1/checkIfVolonteerExistResponse")]
        System.Threading.Tasks.Task<bool> checkIfVolonteerExistAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleItem", ReplyAction="http://tempuri.org/IService1/getSingleItemResponse")]
        Web.ServiceReference1.Cause getSingleItem(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleItem", ReplyAction="http://tempuri.org/IService1/getSingleItemResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.Cause> getSingleItemAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Web.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Web.ServiceReference1.IService1>, Web.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool incrementDonation(decimal funds, int ids) {
            return base.Channel.incrementDonation(funds, ids);
        }
        
        public System.Threading.Tasks.Task<bool> incrementDonationAsync(decimal funds, int ids) {
            return base.Channel.incrementDonationAsync(funds, ids);
        }
        
        public bool addDonation(Web.ServiceReference1.Donation newClient) {
            return base.Channel.addDonation(newClient);
        }
        
        public System.Threading.Tasks.Task<bool> addDonationAsync(Web.ServiceReference1.Donation newClient) {
            return base.Channel.addDonationAsync(newClient);
        }
        
        public Web.ServiceReference1.Donation checkIfdonated(string email, string ID) {
            return base.Channel.checkIfdonated(email, ID);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.Donation> checkIfdonatedAsync(string email, string ID) {
            return base.Channel.checkIfdonatedAsync(email, ID);
        }
        
        public Web.ServiceReference1.Cause[] getCauses() {
            return base.Channel.getCauses();
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.Cause[]> getCausesAsync() {
            return base.Channel.getCausesAsync();
        }
        
        public decimal getTotalDonation() {
            return base.Channel.getTotalDonation();
        }
        
        public System.Threading.Tasks.Task<decimal> getTotalDonationAsync() {
            return base.Channel.getTotalDonationAsync();
        }
        
        public bool registerVolunteer(string name, string surname, string email) {
            return base.Channel.registerVolunteer(name, surname, email);
        }
        
        public System.Threading.Tasks.Task<bool> registerVolunteerAsync(string name, string surname, string email) {
            return base.Channel.registerVolunteerAsync(name, surname, email);
        }
        
        public bool checkIfVolonteerExist(string email) {
            return base.Channel.checkIfVolonteerExist(email);
        }
        
        public System.Threading.Tasks.Task<bool> checkIfVolonteerExistAsync(string email) {
            return base.Channel.checkIfVolonteerExistAsync(email);
        }
        
        public Web.ServiceReference1.Cause getSingleItem(int ID) {
            return base.Channel.getSingleItem(ID);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.Cause> getSingleItemAsync(int ID) {
            return base.Channel.getSingleItemAsync(ID);
        }
    }
}
